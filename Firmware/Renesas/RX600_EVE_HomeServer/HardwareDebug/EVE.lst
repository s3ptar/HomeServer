   1                             		.file	"EVE.c"
   2                             		.section P,"ax"
   3                             	.Ltext0:
   4                             		.global	___ft_cmd_fifo_wp
   5                             		.section	.bss.__ft_cmd_fifo_wp,"aw",@nobits
   6                             		.balign 4
   9                             	___ft_cmd_fifo_wp:
  10 0000 00 00 00 00             		.zero	4
  11                             		.comm	_dli,4,4
  12                             		.comm	_cli,4,4
  13                             		.section	.text.refresh_display,"ax",@progbits
  14                             		.global	_refresh_display
  16                             	_refresh_display:
  17                             	.LFB0:
  18                             		.file 1 "../src/EVE/EVE.c"
   1:../src/EVE/EVE.c **** /* THIS SAMPLE CODE IS PROVIDED AS IS        */
   2:../src/EVE/EVE.c **** /* AND IS SUBJECT TO ALTERATIONS. GLYN       */
   3:../src/EVE/EVE.c **** /* ACCEPTS NO RESPONSIBILITY OR LIABILITY    */
   4:../src/EVE/EVE.c **** /* FOR ANY ERRORS OR                         */
   5:../src/EVE/EVE.c **** /* ELIGIBILITY FOR ANY PURPOSES.             */
   6:../src/EVE/EVE.c **** /* (C) GLYN GmbH & Co. KG                    */
   7:../src/EVE/EVE.c **** /*********************************************
   8:../src/EVE/EVE.c **** Project : EVE.c
   9:../src/EVE/EVE.c ****           Graphic library
  10:../src/EVE/EVE.c ****           EVE with FT800
  11:../src/EVE/EVE.c ****           Display: G-ET0350G0DH6
  12:../src/EVE/EVE.c ****                    G-ET0430G0DH6
  13:../src/EVE/EVE.c **** Version : 0.1 Status: Demo
  14:../src/EVE/EVE.c **** Date    : 29.10.2013
  15:../src/EVE/EVE.c **** 
  16:../src/EVE/EVE.c **** Author  : P.Doerwald / GLYN GmbH & Co. KG
  17:../src/EVE/EVE.c **** 
  18:../src/EVE/EVE.c **** Releases: V0.1
  19:../src/EVE/EVE.c **** 
  20:../src/EVE/EVE.c **** Info    : O
  21:../src/EVE/EVE.c **** *********************************************/
  22:../src/EVE/EVE.c **** #include "iodefine.h"   
  23:../src/EVE/EVE.c **** #include "spi.h"
  24:../src/EVE/EVE.c **** #include "EVE.h" 
  25:../src/EVE/EVE.c **** #include "copro_commands.h"
  26:../src/EVE/EVE.c **** #include <stdio.h>
  27:../src/EVE/EVE.c **** #include <string.h>
  28:../src/EVE/EVE.c **** #include <stdlib.h>
  29:../src/EVE/EVE.c **** #include <math.h>
  30:../src/EVE/EVE.c **** #include "FT_Gpu.h"
  31:../src/EVE/EVE.c **** #include "board.h"
  32:../src/EVE/EVE.c **** #include <math.h>
  33:../src/EVE/EVE.c **** 
  34:../src/EVE/EVE.c **** #define ft_random(x)		(rand() % (x))
  35:../src/EVE/EVE.c **** #define ft_pgm_read_word(addr)   (*(int*)(addr))
  36:../src/EVE/EVE.c **** 
  37:../src/EVE/EVE.c **** ////////////// Values for SPI ///////////////////////
  38:../src/EVE/EVE.c **** 
  39:../src/EVE/EVE.c **** 
  40:../src/EVE/EVE.c **** 
  41:../src/EVE/EVE.c **** #define Low_Byte(x)    					(x & 0xFF)         
  42:../src/EVE/EVE.c **** #define High_Byte(x)   					((x >> 8) & 0xFF)
  43:../src/EVE/EVE.c **** #define ERR   1
  44:../src/EVE/EVE.c **** #define OK    0
  45:../src/EVE/EVE.c **** 
  46:../src/EVE/EVE.c **** ////////////// Values for MEMORY_ACCESS_CONTROL register ///////////////////////
  47:../src/EVE/EVE.c **** #define DEG0_NORMAL     0x08
  48:../src/EVE/EVE.c **** #define DEG0_BMP        0x88
  49:../src/EVE/EVE.c **** #define DEG90_NORMAL    0xA8
  50:../src/EVE/EVE.c **** #define DEG90_BMP       0xE8
  51:../src/EVE/EVE.c **** #define DEG180_NORMAL   0xC8      
  52:../src/EVE/EVE.c **** #define DEG180_BMP      0x48
  53:../src/EVE/EVE.c **** #define DEG270_NORMAL   0x68
  54:../src/EVE/EVE.c **** #define DEG270_BMP      0x28
  55:../src/EVE/EVE.c **** 
  56:../src/EVE/EVE.c **** #define U8              unsigned char
  57:../src/EVE/EVE.c **** #define U16             unsigned int
  58:../src/EVE/EVE.c **** #define U32             unsigned long int
  59:../src/EVE/EVE.c **** #define I32             long int
  60:../src/EVE/EVE.c **** 
  61:../src/EVE/EVE.c **** #define ft_pgm_read_byte(x)        (*(x))
  62:../src/EVE/EVE.c **** 
  63:../src/EVE/EVE.c **** #define Pi  3.14159
  64:../src/EVE/EVE.c **** //////////////////// SPI Transfer description byte /////////////////////////////
  65:../src/EVE/EVE.c **** //#define ID 1					// Use this if BS0 is connected to High
  66:../src/EVE/EVE.c **** #define ID 0					// Use this if BS0 is connected to low
  67:../src/EVE/EVE.c **** 
  68:../src/EVE/EVE.c **** #define INDEX_WRITE       (0x70 | DisplayID)
  69:../src/EVE/EVE.c **** #define REG_WRITE         (0x72 | DisplayID)
  70:../src/EVE/EVE.c **** #define REG_READ          (0x73 | DisplayID)
  71:../src/EVE/EVE.c **** #define INDEX_WRITE_WORD  ((INDEX_WRITE)<<8)
  72:../src/EVE/EVE.c **** #define REG_WRITE_WORD    ((REG_WRITE)<<8)
  73:../src/EVE/EVE.c **** #define REG_READ_WORD     ((REG_READ)<<8)
  74:../src/EVE/EVE.c **** 
  75:../src/EVE/EVE.c **** #define ChipOn  1      
  76:../src/EVE/EVE.c **** #define ChipOff 0 
  77:../src/EVE/EVE.c **** 
  78:../src/EVE/EVE.c **** U16 __ft_cmd_fifo_wp = 0; //FT800 coprocessor fifo write pointer
  79:../src/EVE/EVE.c **** unsigned int dli,cli;
  80:../src/EVE/EVE.c **** extern U16 lum;
  81:../src/EVE/EVE.c **** 
  82:../src/EVE/EVE.c **** /************************************************************************
  83:../src/EVE/EVE.c **** *! \fn			void refresh_display(void)
  84:../src/EVE/EVE.c **** *  \brief		Refresh Commands
  85:../src/EVE/EVE.c **** *  \param		none
  86:../src/EVE/EVE.c **** *  \exception	none
  87:../src/EVE/EVE.c **** *  \return		none
  88:../src/EVE/EVE.c **** ************************************************************************/
  89:../src/EVE/EVE.c **** void refresh_display(void){
  19                             		.loc 1 89 0
  20 0000 7E A6                   		push.l	r6
  21                             	.LCFI0:
  22 0002 EF 06                   		mov.L	r0, r6
  23                             	.LCFI1:
  90:../src/EVE/EVE.c **** 
  91:../src/EVE/EVE.c **** 	cmd(DISPLAY());
  24                             		.loc 1 91 0
  25 0004 66 01                   		mov.L	#0, r1
  26 0006 05 00 00 00             		bsr	_cmd
  92:../src/EVE/EVE.c **** 	cmd_swap();
  27                             		.loc 1 92 0
  28 000a 05 00 00 00             		bsr	_cmd_swap
  93:../src/EVE/EVE.c **** 	wr32(REG_CMD_WRITE,cli);
  29                             		.loc 1 93 0
  30 000e FB 52 00 00 00 00       		mov.L	#_cli, r5
  31 0014 EC 55                   		mov.L	[r5], r5
  32 0016 FB 1E E8 24 10          		mov.L	#0x1024e8, r1
  33 001b EF 52                   		mov.L	r5, r2
  34 001d 05 00 00 00             		bsr	_wr32
  94:../src/EVE/EVE.c **** 	/* Wait till coprocessor completes the operation */
  95:../src/EVE/EVE.c **** 	wr32(REG_CMD_WRITE,0);
  35                             		.loc 1 95 0
  36 0021 FB 1E E8 24 10          		mov.L	#0x1024e8, r1
  37 0026 66 02                   		mov.L	#0, r2
  38 0028 05 00 00 00             		bsr	_wr32
  96:../src/EVE/EVE.c **** 	wr32(REG_CMD_READ,0);
  39                             		.loc 1 96 0
  40 002c FB 1E E4 24 10          		mov.L	#0x1024e4, r1
  41 0031 66 02                   		mov.L	#0, r2
  42 0033 05 00 00 00             		bsr	_wr32
  97:../src/EVE/EVE.c **** 	delay_ms(10);
  43                             		.loc 1 97 0
  44 0037 66 A1                   		mov.L	#10, r1
  45 0039 05 00 00 00             		bsr	_delay_ms
  98:../src/EVE/EVE.c **** 	recover_co_processor();
  46                             		.loc 1 98 0
  47 003d 05 00 00 00             		bsr	_recover_co_processor
  99:../src/EVE/EVE.c **** 	waitcmdfifo_empty();
  48                             		.loc 1 99 0
  49 0041 05 00 00 00             		bsr	_waitcmdfifo_empty
 100:../src/EVE/EVE.c **** 
 101:../src/EVE/EVE.c **** }
  50                             		.loc 1 101 0
  51 0045 3F 66 01                		rtsd	#4, r6-r6
  52                             	.LFE0:
  54                             		.section	.text.EVE_BootUp,"ax",@progbits
  55                             		.global	_EVE_BootUp
  57                             	_EVE_BootUp:
  58                             	.LFB1:
 102:../src/EVE/EVE.c **** 
 103:../src/EVE/EVE.c **** U8 EVE_BootUp(void){
  59                             		.loc 1 103 0
  60 0000 7E A6                   		push.l	r6
  61                             	.LCFI2:
  62 0002 71 06 FC                		add	#-4, r0, r6
  63                             	.LCFI3:
  64 0005 EF 60                   		mov.L	r6, r0
  65                             	.LCFI4:
 104:../src/EVE/EVE.c **** 
 105:../src/EVE/EVE.c ****     unsigned int x;
 106:../src/EVE/EVE.c ****     init_IO();
  66                             		.loc 1 106 0
  67 0007 05 00 00 00             		bsr	_init_IO
 107:../src/EVE/EVE.c **** 
 108:../src/EVE/EVE.c ****     EVE_Power_on;
  68                             		.loc 1 108 0
  69 000b FB 5E 03 C0 08          		mov.L	#0x8c003, r5
  70 0010 CD 54 20                		mov.B	32[r5], r4
  71 0013 65 84                   		or	#8, r4
  72 0015 C7 54 20                		mov.B	r4, 32[r5]
 109:../src/EVE/EVE.c ****     EVE_Power_off;
  73                             		.loc 1 109 0
  74 0018 FB 5E 03 C0 08          		mov.L	#0x8c003, r5
  75 001d CD 54 20                		mov.B	32[r5], r4
  76 0020 75 24 F7                		and	#-9, r4
  77 0023 C7 54 20                		mov.B	r4, 32[r5]
 110:../src/EVE/EVE.c ****     for (x=0;x<1000000;x++);
  78                             		.loc 1 110 0
  79 0026 F8 66 00                		mov.L	#0, [r6]
  80 0029 0F                      		bra	.L3
  81                             	.L4:
  82                             		.loc 1 110 0 is_stmt 0 discriminator 2
  83 002a EC 65                   		mov.L	[r6], r5
  84 002c 62 15                   		add	#1, r5
  85 002e E3 65                   		mov.L	r5, [r6]
  86                             	.L3:
  87                             		.loc 1 110 0 discriminator 1
  88 0030 EC 65                   		mov.L	[r6], r5
  89 0032 77 05 3F 42 0F          		cmp	#0xf423f, r5
  90 0037 25 F3                   		bleu	.L4
 111:../src/EVE/EVE.c ****     EVE_Power_on;
  91                             		.loc 1 111 0 is_stmt 1
  92 0039 FB 5E 03 C0 08          		mov.L	#0x8c003, r5
  93 003e CD 54 20                		mov.B	32[r5], r4
  94 0041 65 84                   		or	#8, r4
  95 0043 C7 54 20                		mov.B	r4, 32[r5]
 112:../src/EVE/EVE.c ****     for (x=0;x<1000000;x++);
  96                             		.loc 1 112 0
  97 0046 F8 66 00                		mov.L	#0, [r6]
  98 0049 0F                      		bra	.L5
  99                             	.L6:
 100                             		.loc 1 112 0 is_stmt 0 discriminator 2
 101 004a EC 65                   		mov.L	[r6], r5
 102 004c 62 15                   		add	#1, r5
 103 004e E3 65                   		mov.L	r5, [r6]
 104                             	.L5:
 105                             		.loc 1 112 0 discriminator 1
 106 0050 EC 65                   		mov.L	[r6], r5
 107 0052 77 05 3F 42 0F          		cmp	#0xf423f, r5
 108 0057 25 F3                   		bleu	.L6
 113:../src/EVE/EVE.c **** 
 114:../src/EVE/EVE.c ****     //<11MHz SPI-Clock
 115:../src/EVE/EVE.c ****     //read location 0 to wake up FT800
 116:../src/EVE/EVE.c ****     //Fehler
 117:../src/EVE/EVE.c ****     host_command(ACTIVE);
 109                             		.loc 1 117 0 is_stmt 1
 110 0059 66 01                   		mov.L	#0, r1
 111 005b 05 00 00 00             		bsr	_host_command
 118:../src/EVE/EVE.c **** 
 119:../src/EVE/EVE.c ****     //send command to change the PLL to external clock
 120:../src/EVE/EVE.c ****     host_command(CLKEXT);
 112                             		.loc 1 120 0
 113 005f 75 41 44                		mov.L	#0x44, r1
 114 0062 05 00 00 00             		bsr	_host_command
 121:../src/EVE/EVE.c **** 	return OK;
 115                             		.loc 1 121 0
 116 0066 66 05                   		mov	#0, r5
 117 0068 5B 55                   		movu.B	r5, r5
 122:../src/EVE/EVE.c **** }  
 118                             		.loc 1 122 0
 119 006a EF 51                   		mov.L	r5, r1
 120 006c 3F 66 02                		rtsd	#8, r6-r6
 121                             	.LFE1:
 123                             		.section	.text.updatecmdfifo,"ax",@progbits
 124                             		.global	_updatecmdfifo
 126                             	_updatecmdfifo:
 127                             	.LFB2:
 123:../src/EVE/EVE.c **** 
 124:../src/EVE/EVE.c **** 
 125:../src/EVE/EVE.c **** 
 126:../src/EVE/EVE.c **** 
 127:../src/EVE/EVE.c **** void updatecmdfifo(U16 count){
 128                             		.loc 1 127 0
 129 0000 7E A6                   		push.l	r6
 130                             	.LCFI5:
 131 0002 71 06 FC                		add	#-4, r0, r6
 132                             	.LCFI6:
 133 0005 EF 60                   		mov.L	r6, r0
 134                             	.LCFI7:
 135 0007 E3 61                   		mov.L	r1, [r6]
 128:../src/EVE/EVE.c ****   
 129:../src/EVE/EVE.c ****     __ft_cmd_fifo_wp  = (__ft_cmd_fifo_wp + count) & 4095;
 136                             		.loc 1 129 0
 137 0009 FB 52 00 00 00 00       		mov.L	#___ft_cmd_fifo_wp, r5
 138 000f EC 55                   		mov.L	[r5], r5
 139 0011 06 88 65                		add	[r6].L, r5
 140 0014 FB 4A FF 0F             		mov.L	#0xfff, r4
 141 0018 53 54                   		and	r5, r4
 142 001a FB 52 00 00 00 00       		mov.L	#___ft_cmd_fifo_wp, r5
 143 0020 E3 54                   		mov.L	r4, [r5]
 130:../src/EVE/EVE.c **** 
 131:../src/EVE/EVE.c ****     //4 byte alignment
 132:../src/EVE/EVE.c ****     __ft_cmd_fifo_wp = (__ft_cmd_fifo_wp + 3) & 0xffc;
 144                             		.loc 1 132 0
 145 0022 FB 52 00 00 00 00       		mov.L	#___ft_cmd_fifo_wp, r5
 146 0028 EC 55                   		mov.L	[r5], r5
 147 002a 62 35                   		add	#3, r5
 148 002c FB 4A FC 0F             		mov.L	#0xffc, r4
 149 0030 53 54                   		and	r5, r4
 150 0032 FB 52 00 00 00 00       		mov.L	#___ft_cmd_fifo_wp, r5
 151 0038 E3 54                   		mov.L	r4, [r5]
 133:../src/EVE/EVE.c ****     wr16(REG_CMD_WRITE,__ft_cmd_fifo_wp);
 152                             		.loc 1 133 0
 153 003a FB 52 00 00 00 00       		mov.L	#___ft_cmd_fifo_wp, r5
 154 0040 EC 55                   		mov.L	[r5], r5
 155 0042 FB 1E E8 24 10          		mov.L	#0x1024e8, r1
 156 0047 EF 52                   		mov.L	r5, r2
 157 0049 05 00 00 00             		bsr	_wr16
 134:../src/EVE/EVE.c **** 
 135:../src/EVE/EVE.c **** }
 158                             		.loc 1 135 0
 159 004d 3F 66 02                		rtsd	#8, r6-r6
 160                             	.LFE2:
 162                             		.section	.text.waitcmdfifo_empty,"ax",@progbits
 163                             		.global	_waitcmdfifo_empty
 165                             	_waitcmdfifo_empty:
 166                             	.LFB3:
 136:../src/EVE/EVE.c **** 
 137:../src/EVE/EVE.c **** /* Wait for the complete consumption of Coprocessor commands */
 138:../src/EVE/EVE.c **** void waitcmdfifo_empty(){
 167                             		.loc 1 138 0
 168 0000 7E A6                   		push.l	r6
 169                             	.LCFI8:
 170 0002 71 06 F8                		add	#-8, r0, r6
 171                             	.LCFI9:
 172 0005 EF 60                   		mov.L	r6, r0
 173                             	.LCFI10:
 174                             	.L10:
 175                             	.LBB2:
 139:../src/EVE/EVE.c **** 
 140:../src/EVE/EVE.c **** 	int cmdrdptr,cmdwrptr;
 141:../src/EVE/EVE.c **** 
 142:../src/EVE/EVE.c **** 	do{
 143:../src/EVE/EVE.c **** 	    cmdrdptr = rd16(REG_CMD_READ);
 176                             		.loc 1 143 0 discriminator 1
 177 0007 FB 1E E4 24 10          		mov.L	#0x1024e4, r1
 178 000c 05 00 00 00             		bsr	_rd16
 179 0010 E3 61                   		mov.L	r1, [r6]
 144:../src/EVE/EVE.c **** 		cmdwrptr = rd16(REG_CMD_WRITE);
 180                             		.loc 1 144 0 discriminator 1
 181 0012 FB 1E E8 24 10          		mov.L	#0x1024e8, r1
 182 0017 05 00 00 00             		bsr	_rd16
 183 001b A0 69                   		mov.L	r1, 4[r6]
 184                             	.LBE2:
 145:../src/EVE/EVE.c **** 	}while (cmdwrptr != cmdrdptr);
 185                             		.loc 1 145 0 discriminator 1
 186 001d A8 6C                   		mov.L	4[r6], r4
 187 001f EC 65                   		mov.L	[r6], r5
 188 0021 47 54                   		cmp	r5, r4
 189 0023 21 E4                   		bne	.L10
 146:../src/EVE/EVE.c ****     __ft_cmd_fifo_wp =rd16(REG_CMD_WRITE);
 190                             		.loc 1 146 0
 191 0025 FB 1E E8 24 10          		mov.L	#0x1024e8, r1
 192 002a 05 00 00 00             		bsr	_rd16
 193 002e EF 15                   		mov.L	r1, r5
 194 0030 EF 54                   		mov.L	r5, r4
 195 0032 FB 52 00 00 00 00       		mov.L	#___ft_cmd_fifo_wp, r5
 196 0038 E3 54                   		mov.L	r4, [r5]
 147:../src/EVE/EVE.c **** }
 197                             		.loc 1 147 0
 198 003a 3F 66 03                		rtsd	#12, r6-r6
 199                             	.LFE3:
 201                             		.section	.text.recover_co_processor,"ax",@progbits
 202                             		.global	_recover_co_processor
 204                             	_recover_co_processor:
 205                             	.LFB4:
 148:../src/EVE/EVE.c **** 
 149:../src/EVE/EVE.c **** void recover_co_processor(){
 206                             		.loc 1 149 0
 207 0000 7E A6                   		push.l	r6
 208                             	.LCFI11:
 209 0002 EF 06                   		mov.L	r0, r6
 210                             	.LCFI12:
 150:../src/EVE/EVE.c **** 
 151:../src/EVE/EVE.c ****     wr8(REG_CPURESET,1);
 211                             		.loc 1 151 0
 212 0004 FB 1E 1C 24 10          		mov.L	#0x10241c, r1
 213 0009 66 12                   		mov.L	#1, r2
 214 000b 05 00 00 00             		bsr	_wr8
 152:../src/EVE/EVE.c ****     wr32(REG_CMD_WRITE,0);
 215                             		.loc 1 152 0
 216 000f FB 1E E8 24 10          		mov.L	#0x1024e8, r1
 217 0014 66 02                   		mov.L	#0, r2
 218 0016 05 00 00 00             		bsr	_wr32
 153:../src/EVE/EVE.c ****     wr32(REG_CMD_READ,0);
 219                             		.loc 1 153 0
 220 001a FB 1E E4 24 10          		mov.L	#0x1024e4, r1
 221 001f 66 02                   		mov.L	#0, r2
 222 0021 05 00 00 00             		bsr	_wr32
 154:../src/EVE/EVE.c ****     wr8(REG_CPURESET,0);
 223                             		.loc 1 154 0
 224 0025 FB 1E 1C 24 10          		mov.L	#0x10241c, r1
 225 002a 66 02                   		mov.L	#0, r2
 226 002c 05 00 00 00             		bsr	_wr8
 155:../src/EVE/EVE.c **** } 
 227                             		.loc 1 155 0
 228 0030 3F 66 01                		rtsd	#4, r6-r6
 229                             	.LFE4:
 231                             		.section	.text.play_sound,"ax",@progbits
 232                             		.global	_play_sound
 234                             	_play_sound:
 235                             	.LFB5:
 156:../src/EVE/EVE.c **** 
 157:../src/EVE/EVE.c **** void play_sound(U8 sound, U8 note, U8 volume){
 236                             		.loc 1 157 0
 237 0000 7E A6                   		push.l	r6
 238                             	.LCFI13:
 239 0002 71 06 FC                		add	#-4, r0, r6
 240                             	.LCFI14:
 241 0005 EF 60                   		mov.L	r6, r0
 242                             	.LCFI15:
 243 0007 C3 61                   		mov.B	r1, [r6]
 244 0009 80 6A                   		mov.B	r2, 1[r6]
 245 000b 80 E3                   		mov.B	r3, 2[r6]
 158:../src/EVE/EVE.c **** 
 159:../src/EVE/EVE.c ****     wr8(REG_VOL_SOUND,volume);
 246                             		.loc 1 159 0
 247 000d B0 E5                   		movu.B	2[r6], r5
 248 000f FB 1E 80 24 10          		mov.L	#0x102480, r1
 249 0014 EF 52                   		mov.L	r5, r2
 250 0016 05 00 00 00             		bsr	_wr8
 160:../src/EVE/EVE.c ****     wr16(REG_SOUND,sound|(note<<8));
 251                             		.loc 1 160 0
 252 001a 58 64                   		movu.B	[r6], r4
 253 001c B0 6D                   		movu.B	1[r6], r5
 254 001e 6C 85                   		shll	#8, r5
 255 0020 57 45                   		or	r4, r5
 256 0022 FB 1E 84 24 10          		mov.L	#0x102484, r1
 257 0027 EF 52                   		mov.L	r5, r2
 258 0029 05 00 00 00             		bsr	_wr16
 161:../src/EVE/EVE.c ****     wr8(REG_PLAY,1);
 259                             		.loc 1 161 0
 260 002d FB 1E 88 24 10          		mov.L	#0x102488, r1
 261 0032 66 12                   		mov.L	#1, r2
 262 0034 05 00 00 00             		bsr	_wr8
 162:../src/EVE/EVE.c ****   
 163:../src/EVE/EVE.c **** }     
 263                             		.loc 1 163 0
 264 0038 3F 66 02                		rtsd	#8, r6-r6
 265                             	.LFE5:
 267                             		.section	.text.TFT_off,"ax",@progbits
 268                             		.global	_TFT_off
 270                             	_TFT_off:
 271                             	.LFB6:
 164:../src/EVE/EVE.c **** /******** controlling TFT *********************/
 165:../src/EVE/EVE.c **** void TFT_off(){
 272                             		.loc 1 165 0
 273 0000 7E A6                   		push.l	r6
 274                             	.LCFI16:
 275 0002 EF 06                   		mov.L	r0, r6
 276                             	.LCFI17:
 166:../src/EVE/EVE.c **** 
 167:../src/EVE/EVE.c ****     wr8(REG_GPIO,0x00);      //Bit7 low
 277                             		.loc 1 167 0
 278 0004 FB 1E 90 24 10          		mov.L	#0x102490, r1
 279 0009 66 02                   		mov.L	#0, r2
 280 000b 05 00 00 00             		bsr	_wr8
 168:../src/EVE/EVE.c **** }  
 281                             		.loc 1 168 0
 282 000f 3F 66 01                		rtsd	#4, r6-r6
 283                             	.LFE6:
 285                             		.section	.text.TFT_on,"ax",@progbits
 286                             		.global	_TFT_on
 288                             	_TFT_on:
 289                             	.LFB7:
 169:../src/EVE/EVE.c **** void TFT_on(){
 290                             		.loc 1 169 0
 291 0000 7E A6                   		push.l	r6
 292                             	.LCFI18:
 293 0002 EF 06                   		mov.L	r0, r6
 294                             	.LCFI19:
 170:../src/EVE/EVE.c **** 
 171:../src/EVE/EVE.c ****     wr8(REG_GPIO,0x80);      //Bit7 high
 295                             		.loc 1 171 0
 296 0004 FB 1E 90 24 10          		mov.L	#0x102490, r1
 297 0009 75 42 80                		mov.L	#0x80, r2
 298 000c 05 00 00 00             		bsr	_wr8
 172:../src/EVE/EVE.c **** }
 299                             		.loc 1 172 0
 300 0010 3F 66 01                		rtsd	#4, r6-r6
 301                             	.LFE7:
 303                             		.section	.text.TFT_dim,"ax",@progbits
 304                             		.global	_TFT_dim
 306                             	_TFT_dim:
 307                             	.LFB8:
 173:../src/EVE/EVE.c **** void TFT_dim(U8 percent){
 308                             		.loc 1 173 0
 309 0000 6E 68                   		pushm	r6-r8
 310                             	.LCFI20:
 311 0002 71 06 FC                		add	#-4, r0, r6
 312                             	.LCFI21:
 313 0005 EF 60                   		mov.L	r6, r0
 314                             	.LCFI22:
 315 0007 C3 61                   		mov.B	r1, [r6]
 174:../src/EVE/EVE.c **** 
 175:../src/EVE/EVE.c ****     wr16(REG_PWM_DUTY,(100-percent)*0x80/100);
 316                             		.loc 1 175 0
 317 0009 58 65                   		movu.B	[r6], r5
 318 000b 75 44 64                		mov.L	#0x64, r4
 319 000e FF 05 54                		sub	r5, r4, r5
 320 0011 FD C7 53                		shll	#7, r5, r3
 321 0014 FB 72 1F 85 EB 51       		mov.L	#0x51eb851f, r7
 322 001a FC 1B 37                		emul	r3, r7
 323 001d EF 74                   		mov.L	r7, r4
 324 001f EF 85                   		mov.L	r8, r5
 325 0021 FD A5 54                		shar	#5, r5, r4
 326 0024 FD BF 35                		shar	#31, r3, r5
 327 0027 FF 05 54                		sub	r5, r4, r5
 328 002a FB 1E C4 24 10          		mov.L	#0x1024c4, r1
 329 002f EF 52                   		mov.L	r5, r2
 330 0031 05 00 00 00             		bsr	_wr16
 176:../src/EVE/EVE.c **** }  
 331                             		.loc 1 176 0
 332 0035 3F 68 04                		rtsd	#16, r6-r8
 333                             	.LFE8:
 335                             		.section	.text.TFT_fadeout,"ax",@progbits
 336                             		.global	_TFT_fadeout
 338                             	_TFT_fadeout:
 339                             	.LFB9:
 177:../src/EVE/EVE.c **** 
 178:../src/EVE/EVE.c **** void TFT_fadeout(U16 zeit){
 340                             		.loc 1 178 0
 341 0000 7E A6                   		push.l	r6
 342                             	.LCFI23:
 343 0002 71 06 F8                		add	#-8, r0, r6
 344                             	.LCFI24:
 345 0005 EF 60                   		mov.L	r6, r0
 346                             	.LCFI25:
 347 0007 A0 69                   		mov.L	r1, 4[r6]
 179:../src/EVE/EVE.c **** 
 180:../src/EVE/EVE.c ****     U8 x;
 181:../src/EVE/EVE.c ****     x=lum;
 348                             		.loc 1 181 0
 349 0009 FB 52 00 00 00 00       		mov.L	#_lum, r5
 350 000f EC 55                   		mov.L	[r5], r5
 351 0011 C3 65                   		mov.B	r5, [r6]
 182:../src/EVE/EVE.c ****     while(x--){
 352                             		.loc 1 182 0
 353 0013 2E 0E                   		bra	.L17
 354                             	.L18:
 183:../src/EVE/EVE.c ****         delay_ms(zeit);
 355                             		.loc 1 183 0
 356 0015 A8 69                   		mov.L	4[r6], r1
 357 0017 05 00 00 00             		bsr	_delay_ms
 184:../src/EVE/EVE.c ****         TFT_dim(x);
 358                             		.loc 1 184 0
 359 001b CC 61                   		mov.B	[r6], r1
 360 001d 05 00 00 00             		bsr	_TFT_dim
 361                             	.L17:
 182:../src/EVE/EVE.c ****     while(x--){
 362                             		.loc 1 182 0 discriminator 1
 363 0021 CC 65                   		mov.B	[r6], r5
 364 0023 71 54 FF                		add	#-1, r5, r4
 365 0026 C3 64                   		mov.B	r4, [r6]
 366 0028 5B 55                   		movu.B	r5, r5
 367 002a 61 05                   		cmp	#0, r5
 368 002c 21 E9                   		bne	.L18
 185:../src/EVE/EVE.c ****     }
 186:../src/EVE/EVE.c **** }
 369                             		.loc 1 186 0
 370 002e 3F 66 03                		rtsd	#12, r6-r6
 371                             	.LFE9:
 373                             		.section	.text.TFT_fadein,"ax",@progbits
 374                             		.global	_TFT_fadein
 376                             	_TFT_fadein:
 377                             	.LFB10:
 187:../src/EVE/EVE.c **** 
 188:../src/EVE/EVE.c **** void TFT_fadein(U16 zeit){
 378                             		.loc 1 188 0
 379 0000 7E A6                   		push.l	r6
 380                             	.LCFI26:
 381 0002 71 06 F8                		add	#-8, r0, r6
 382                             	.LCFI27:
 383 0005 EF 60                   		mov.L	r6, r0
 384                             	.LCFI28:
 385 0007 A0 69                   		mov.L	r1, 4[r6]
 189:../src/EVE/EVE.c **** 
 190:../src/EVE/EVE.c ****     U8 x;
 191:../src/EVE/EVE.c ****     for(x=0;x<=lum;x++){
 386                             		.loc 1 191 0
 387 0009 F8 64 00                		mov.B	#0, [r6]
 388 000c 2E 14                   		bra	.L20
 389                             	.L21:
 192:../src/EVE/EVE.c ****         delay_ms(zeit);
 390                             		.loc 1 192 0 discriminator 2
 391 000e A8 69                   		mov.L	4[r6], r1
 392 0010 05 00 00 00             		bsr	_delay_ms
 193:../src/EVE/EVE.c ****     TFT_dim(x);
 393                             		.loc 1 193 0 discriminator 2
 394 0014 CC 61                   		mov.B	[r6], r1
 395 0016 05 00 00 00             		bsr	_TFT_dim
 191:../src/EVE/EVE.c ****         delay_ms(zeit);
 396                             		.loc 1 191 0 discriminator 2
 397 001a CC 65                   		mov.B	[r6], r5
 398 001c 62 15                   		add	#1, r5
 399 001e C3 65                   		mov.B	r5, [r6]
 400                             	.L20:
 191:../src/EVE/EVE.c ****         delay_ms(zeit);
 401                             		.loc 1 191 0 is_stmt 0 discriminator 1
 402 0020 58 64                   		movu.B	[r6], r4
 403 0022 FB 52 00 00 00 00       		mov.L	#_lum, r5
 404 0028 EC 55                   		mov.L	[r5], r5
 405 002a 47 54                   		cmp	r5, r4
 406 002c 25 E2                   		bleu	.L21
 194:../src/EVE/EVE.c ****     }
 195:../src/EVE/EVE.c **** }
 407                             		.loc 1 195 0 is_stmt 1
 408 002e 3F 66 03                		rtsd	#12, r6-r6
 409                             	.LFE10:
 411                             		.section	.text.dl,"ax",@progbits
 412                             		.global	_dl
 414                             	_dl:
 415                             	.LFB11:
 196:../src/EVE/EVE.c **** 
 197:../src/EVE/EVE.c **** void dl(unsigned long cmd){
 416                             		.loc 1 197 0
 417 0000 7E A6                   		push.l	r6
 418                             	.LCFI29:
 419 0002 71 06 FC                		add	#-4, r0, r6
 420                             	.LCFI30:
 421 0005 EF 60                   		mov.L	r6, r0
 422                             	.LCFI31:
 423 0007 E3 61                   		mov.L	r1, [r6]
 198:../src/EVE/EVE.c **** 
 199:../src/EVE/EVE.c ****     wr32(RAM_DL+dli,cmd);
 424                             		.loc 1 199 0
 425 0009 FB 52 00 00 00 00       		mov.L	#_dli, r5
 426 000f EC 55                   		mov.L	[r5], r5
 427 0011 73 55 00 00 10          		add	#0x100000, r5
 428 0016 EF 51                   		mov.L	r5, r1
 429 0018 EC 62                   		mov.L	[r6], r2
 430 001a 05 00 00 00             		bsr	_wr32
 200:../src/EVE/EVE.c ****     dli+=4;
 431                             		.loc 1 200 0
 432 001e FB 52 00 00 00 00       		mov.L	#_dli, r5
 433 0024 EC 55                   		mov.L	[r5], r5
 434 0026 71 54 04                		add	#4, r5, r4
 435 0029 FB 52 00 00 00 00       		mov.L	#_dli, r5
 436 002f E3 54                   		mov.L	r4, [r5]
 201:../src/EVE/EVE.c **** }  
 437                             		.loc 1 201 0
 438 0031 3F 66 02                		rtsd	#8, r6-r6
 439                             	.LFE11:
 441                             		.section	.text.video_timing,"ax",@progbits
 442                             		.global	_video_timing
 444                             	_video_timing:
 445                             	.LFB12:
 202:../src/EVE/EVE.c **** 
 203:../src/EVE/EVE.c **** void video_timing(void){
 446                             		.loc 1 203 0
 447 0000 7E A6                   		push.l	r6
 448                             	.LCFI32:
 449 0002 EF 06                   		mov.L	r0, r6
 450                             	.LCFI33:
 204:../src/EVE/EVE.c **** 
 205:../src/EVE/EVE.c ****     #ifdef ET0350
 206:../src/EVE/EVE.c ****         wr16(REG_HCYCLE,408);
 207:../src/EVE/EVE.c ****         wr16(REG_HOFFSET,33);
 208:../src/EVE/EVE.c ****         wr16(REG_HSIZE,320);
 209:../src/EVE/EVE.c ****         wr16(REG_HSYNC0,0);
 210:../src/EVE/EVE.c ****         wr16(REG_HSYNC1,30);
 211:../src/EVE/EVE.c ****         wr16(REG_VCYCLE,263);
 212:../src/EVE/EVE.c ****         wr16(REG_VOFFSET,4);
 213:../src/EVE/EVE.c ****         wr16(REG_VSIZE,240);
 214:../src/EVE/EVE.c ****         wr16(REG_VSYNC0,0);
 215:../src/EVE/EVE.c ****         wr16(REG_VSYNC1,3);
 216:../src/EVE/EVE.c ****    #endif
 217:../src/EVE/EVE.c ****   
 218:../src/EVE/EVE.c ****    #ifdef ET0430
 219:../src/EVE/EVE.c ****        wr16(REG_HCYCLE,548);
 451                             		.loc 1 219 0
 452 0004 FB 1E 28 24 10          		mov.L	#0x102428, r1
 453 0009 FB 2A 24 02             		mov.L	#0x224, r2
 454 000d 05 00 00 00             		bsr	_wr16
 220:../src/EVE/EVE.c ****        wr16(REG_HOFFSET,43);
 455                             		.loc 1 220 0
 456 0011 FB 1E 2C 24 10          		mov.L	#0x10242c, r1
 457 0016 75 42 2B                		mov.L	#43, r2
 458 0019 05 00 00 00             		bsr	_wr16
 221:../src/EVE/EVE.c ****        wr16(REG_HSIZE,480);
 459                             		.loc 1 221 0
 460 001d FB 1E 30 24 10          		mov.L	#0x102430, r1
 461 0022 FB 2A E0 01             		mov.L	#0x1e0, r2
 462 0026 05 00 00 00             		bsr	_wr16
 222:../src/EVE/EVE.c ****        wr16(REG_HSYNC0,0);
 463                             		.loc 1 222 0
 464 002a FB 1E 34 24 10          		mov.L	#0x102434, r1
 465 002f 66 02                   		mov.L	#0, r2
 466 0031 05 00 00 00             		bsr	_wr16
 223:../src/EVE/EVE.c ****        wr16(REG_HSYNC1,41);
 467                             		.loc 1 223 0
 468 0035 FB 1E 38 24 10          		mov.L	#0x102438, r1
 469 003a 75 42 29                		mov.L	#41, r2
 470 003d 05 00 00 00             		bsr	_wr16
 224:../src/EVE/EVE.c ****        wr16(REG_VCYCLE,292);
 471                             		.loc 1 224 0
 472 0041 FB 1E 3C 24 10          		mov.L	#0x10243c, r1
 473 0046 FB 2A 24 01             		mov.L	#0x124, r2
 474 004a 05 00 00 00             		bsr	_wr16
 225:../src/EVE/EVE.c ****        wr16(REG_VOFFSET,12);
 475                             		.loc 1 225 0
 476 004e FB 1E 40 24 10          		mov.L	#0x102440, r1
 477 0053 66 C2                   		mov.L	#12, r2
 478 0055 05 00 00 00             		bsr	_wr16
 226:../src/EVE/EVE.c ****        wr16(REG_VSIZE,272);
 479                             		.loc 1 226 0
 480 0059 FB 1E 44 24 10          		mov.L	#0x102444, r1
 481 005e FB 2A 10 01             		mov.L	#0x110, r2
 482 0062 05 00 00 00             		bsr	_wr16
 227:../src/EVE/EVE.c ****        wr16(REG_VSYNC0,0);
 483                             		.loc 1 227 0
 484 0066 FB 1E 48 24 10          		mov.L	#0x102448, r1
 485 006b 66 02                   		mov.L	#0, r2
 486 006d 05 00 00 00             		bsr	_wr16
 228:../src/EVE/EVE.c ****        wr16(REG_VSYNC1,10);
 487                             		.loc 1 228 0
 488 0071 FB 1E 4C 24 10          		mov.L	#0x10244c, r1
 489 0076 66 A2                   		mov.L	#10, r2
 490 0078 05 00 00 00             		bsr	_wr16
 229:../src/EVE/EVE.c ****    #endif
 230:../src/EVE/EVE.c ****   
 231:../src/EVE/EVE.c ****    #ifdef ETV570
 232:../src/EVE/EVE.c ****        wr16(REG_HCYCLE,800);
 233:../src/EVE/EVE.c ****        wr16(REG_HOFFSET,30);
 234:../src/EVE/EVE.c ****        wr16(REG_HSIZE,512);
 235:../src/EVE/EVE.c ****        wr16(REG_HSYNC0,0);
 236:../src/EVE/EVE.c ****        wr16(REG_HSYNC1,41);
 237:../src/EVE/EVE.c ****        wr16(REG_VCYCLE,525);
 238:../src/EVE/EVE.c ****        wr16(REG_VOFFSET,12);
 239:../src/EVE/EVE.c ****        wr16(REG_VSIZE,480);
 240:../src/EVE/EVE.c ****        wr16(REG_VSYNC0,0);
 241:../src/EVE/EVE.c ****        wr16(REG_VSYNC1,10);
 242:../src/EVE/EVE.c ****    #endif
 243:../src/EVE/EVE.c ****   
 244:../src/EVE/EVE.c ****   
 245:../src/EVE/EVE.c ****     wr16(REG_PWM_HZ,1000);
 491                             		.loc 1 245 0
 492 007c FB 1E C0 24 10          		mov.L	#0x1024c0, r1
 493 0081 FB 2A E8 03             		mov.L	#0x3e8, r2
 494 0085 05 00 00 00             		bsr	_wr16
 246:../src/EVE/EVE.c ****     TFT_dim(lum);
 495                             		.loc 1 246 0
 496 0089 FB 52 00 00 00 00       		mov.L	#_lum, r5
 497 008f EC 55                   		mov.L	[r5], r5
 498 0091 CF 51                   		mov.B	r5, r1
 499 0093 05 00 00 00             		bsr	_TFT_dim
 247:../src/EVE/EVE.c ****   
 248:../src/EVE/EVE.c ****     wr8(REG_GPIO_DIR,0x80);  //Bit7 output
 500                             		.loc 1 248 0
 501 0097 FB 1E 8C 24 10          		mov.L	#0x10248c, r1
 502 009c 75 42 80                		mov.L	#0x80, r2
 503 009f 05 00 00 00             		bsr	_wr8
 249:../src/EVE/EVE.c ****     wr8(REG_GPIO,0x80);      //Bit7 high
 504                             		.loc 1 249 0
 505 00a3 FB 1E 90 24 10          		mov.L	#0x102490, r1
 506 00a8 75 42 80                		mov.L	#0x80, r2
 507 00ab 05 00 00 00             		bsr	_wr8
 250:../src/EVE/EVE.c ****   
 251:../src/EVE/EVE.c ****     wr32(RAM_DL,CLEAR_COLOR_RGB(0,0,0));
 508                             		.loc 1 251 0
 509 00af FB 1E 00 00 10          		mov.L	#0x100000, r1
 510 00b4 FB 22 00 00 00 02       		mov.L	#0x2000000, r2
 511 00ba 05 00 00 00             		bsr	_wr32
 252:../src/EVE/EVE.c ****     wr32(RAM_DL+4,CLEAR(1,1,1));
 512                             		.loc 1 252 0
 513 00be FB 1E 04 00 10          		mov.L	#0x100004, r1
 514 00c3 FB 22 07 00 00 26       		mov.L	#0x26000007, r2
 515 00c9 05 00 00 00             		bsr	_wr32
 253:../src/EVE/EVE.c ****     wr32(RAM_DL+8,DISPLAY());
 516                             		.loc 1 253 0
 517 00cd FB 1E 08 00 10          		mov.L	#0x100008, r1
 518 00d2 66 02                   		mov.L	#0, r2
 519 00d4 05 00 00 00             		bsr	_wr32
 254:../src/EVE/EVE.c ****     wr32(REG_DLSWAP,DLSWAP_FRAME);
 520                             		.loc 1 254 0
 521 00d8 FB 1E 50 24 10          		mov.L	#0x102450, r1
 522 00dd 66 22                   		mov.L	#2, r2
 523 00df 05 00 00 00             		bsr	_wr32
 255:../src/EVE/EVE.c ****   
 256:../src/EVE/EVE.c ****     #ifdef ET0350
 257:../src/EVE/EVE.c ****         wr16(REG_PCLK,7);
 258:../src/EVE/EVE.c ****     #endif
 259:../src/EVE/EVE.c ****   
 260:../src/EVE/EVE.c ****     #ifdef ET0430
 261:../src/EVE/EVE.c ****         wr16(REG_PCLK,5);
 524                             		.loc 1 261 0
 525 00e3 FB 1E 6C 24 10          		mov.L	#0x10246c, r1
 526 00e8 66 52                   		mov.L	#5, r2
 527 00ea 05 00 00 00             		bsr	_wr16
 262:../src/EVE/EVE.c ****     #endif
 263:../src/EVE/EVE.c ****   
 264:../src/EVE/EVE.c ****     #ifdef ETV570
 265:../src/EVE/EVE.c ****         wr16(REG_PCLK,4);
 266:../src/EVE/EVE.c ****     #endif
 267:../src/EVE/EVE.c ****   
 268:../src/EVE/EVE.c ****     //pause is necessary
 269:../src/EVE/EVE.c ****     delay_ms(1000);
 528                             		.loc 1 269 0
 529 00ee FB 1A E8 03             		mov.L	#0x3e8, r1
 530 00f2 05 00 00 00             		bsr	_delay_ms
 270:../src/EVE/EVE.c **** }  
 531                             		.loc 1 270 0
 532 00f6 3F 66 01                		rtsd	#4, r6-r6
 533                             	.LFE12:
 535                             		.section	.text.read_CHIPID,"ax",@progbits
 536                             		.global	_read_CHIPID
 538                             	_read_CHIPID:
 539                             	.LFB13:
 271:../src/EVE/EVE.c **** 
 272:../src/EVE/EVE.c **** 
 273:../src/EVE/EVE.c **** 
 274:../src/EVE/EVE.c **** 
 275:../src/EVE/EVE.c **** // read Chip ID
 276:../src/EVE/EVE.c **** U32 read_CHIPID(){
 540                             		.loc 1 276 0
 541 0000 7E A6                   		push.l	r6
 542                             	.LCFI34:
 543 0002 EF 06                   		mov.L	r0, r6
 544                             	.LCFI35:
 277:../src/EVE/EVE.c **** 
 278:../src/EVE/EVE.c ****     return (rd32(ROM_CHIPID));
 545                             		.loc 1 278 0
 546 0004 FB 1E 00 00 0C          		mov.L	#0xc0000, r1
 547 0009 05 00 00 00             		bsr	_rd32
 548 000d EF 15                   		mov.L	r1, r5
 279:../src/EVE/EVE.c **** }     
 549                             		.loc 1 279 0
 550 000f EF 51                   		mov.L	r5, r1
 551 0011 3F 66 01                		rtsd	#4, r6-r6
 552                             	.LFE13:
 554                             		.section C,"a",@progbits
 555                             		.p2align 2
 556                             	.LC0:
 557 0000 50 6C 65 61 73 65 20 74 		.string	"Please tap on the dot"
 557      61 70 20 6F 6E 20 74 68 
 557      65 20 64 6F 74 00 
 558                             		.section	.text.Touch,"ax",@progbits
 559                             		.global	_Touch
 561                             	_Touch:
 562                             	.LFB14:
 280:../src/EVE/EVE.c **** 
 281:../src/EVE/EVE.c **** // callibrate the touchscreen
 282:../src/EVE/EVE.c **** void Touch(){
 563                             		.loc 1 282 0
 564 0000 7E A6                   		push.l	r6
 565                             	.LCFI36:
 566 0002 EF 06                   		mov.L	r0, r6
 567                             	.LCFI37:
 568 0004 60 40                   		sub	#4, r0
 283:../src/EVE/EVE.c ****         
 284:../src/EVE/EVE.c ****     cli = 0;
 569                             		.loc 1 284 0
 570 0006 FB 52 00 00 00 00       		mov.L	#_cli, r5
 571 000c F8 56 00                		mov.L	#0, [r5]
 285:../src/EVE/EVE.c ****     cmd_dlstart();
 572                             		.loc 1 285 0
 573 000f 05 00 00 00             		bsr	_cmd_dlstart
 286:../src/EVE/EVE.c ****     cmd(CLEAR(1,1,1));
 574                             		.loc 1 286 0
 575 0013 FB 12 07 00 00 26       		mov.L	#0x26000007, r1
 576 0019 05 00 00 00             		bsr	_cmd
 287:../src/EVE/EVE.c ****     cmd(COLOR_RGB(255,255,255));
 577                             		.loc 1 287 0
 578 001d FB 12 FF FF FF 04       		mov.L	#0x4ffffff, r1
 579 0023 05 00 00 00             		bsr	_cmd
 288:../src/EVE/EVE.c ****     cmd_text(80,30,27,OPT_CENTERY,"Please tap on the dot");
 580                             		.loc 1 288 0
 581 0027 F8 02 00 00 00 00       		mov.L	#.LC0, [r0]
 582 002d 75 41 50                		mov.L	#0x50, r1
 583 0030 75 42 1E                		mov.L	#30, r2
 584 0033 75 43 1B                		mov.L	#27, r3
 585 0036 FB 4A 00 04             		mov.L	#0x400, r4
 586 003a 05 00 00 00             		bsr	_cmd_text
 289:../src/EVE/EVE.c ****     cmd_calibrate();
 587                             		.loc 1 289 0
 588 003e 05 00 00 00             		bsr	_cmd_calibrate
 290:../src/EVE/EVE.c ****     cmd_swap();
 589                             		.loc 1 290 0
 590 0042 05 00 00 00             		bsr	_cmd_swap
 291:../src/EVE/EVE.c ****     wr32(REG_CMD_WRITE,cli);
 591                             		.loc 1 291 0
 592 0046 FB 52 00 00 00 00       		mov.L	#_cli, r5
 593 004c EC 55                   		mov.L	[r5], r5
 594 004e FB 1E E8 24 10          		mov.L	#0x1024e8, r1
 595 0053 EF 52                   		mov.L	r5, r2
 596 0055 05 00 00 00             		bsr	_wr32
 292:../src/EVE/EVE.c ****     /* Wait till coprocessor completes the operation */
 293:../src/EVE/EVE.c ****     waitcmdfifo_empty();
 597                             		.loc 1 293 0
 598 0059 05 00 00 00             		bsr	_waitcmdfifo_empty
 294:../src/EVE/EVE.c ****     wr32(REG_CMD_WRITE,0);
 599                             		.loc 1 294 0
 600 005d FB 1E E8 24 10          		mov.L	#0x1024e8, r1
 601 0062 66 02                   		mov.L	#0, r2
 602 0064 05 00 00 00             		bsr	_wr32
 295:../src/EVE/EVE.c ****     wr32(REG_CMD_READ,0);
 603                             		.loc 1 295 0
 604 0068 FB 1E E4 24 10          		mov.L	#0x1024e4, r1
 605 006d 66 02                   		mov.L	#0, r2
 606 006f 05 00 00 00             		bsr	_wr32
 296:../src/EVE/EVE.c ****     delay_ms(100);
 607                             		.loc 1 296 0
 608 0073 75 41 64                		mov.L	#0x64, r1
 609 0076 05 00 00 00             		bsr	_delay_ms
 297:../src/EVE/EVE.c **** }        
 610                             		.loc 1 297 0
 611 007a 3F 66 02                		rtsd	#8, r6-r6
 612                             	.LFE14:
 614                             		.section	.text.Logo,"ax",@progbits
 615                             		.global	_Logo
 617                             	_Logo:
 618                             	.LFB15:
 298:../src/EVE/EVE.c **** 
 299:../src/EVE/EVE.c **** void Logo(){
 619                             		.loc 1 299 0
 620 0000 7E A6                   		push.l	r6
 621                             	.LCFI38:
 622 0002 EF 06                   		mov.L	r0, r6
 623                             	.LCFI39:
 300:../src/EVE/EVE.c **** 
 301:../src/EVE/EVE.c **** 	cli = 0;
 624                             		.loc 1 301 0
 625 0004 FB 52 00 00 00 00       		mov.L	#_cli, r5
 626 000a F8 56 00                		mov.L	#0, [r5]
 302:../src/EVE/EVE.c ****     cmd_dlstart();
 627                             		.loc 1 302 0
 628 000d 05 00 00 00             		bsr	_cmd_dlstart
 303:../src/EVE/EVE.c ****     cmd_logo();
 629                             		.loc 1 303 0
 630 0011 05 00 00 00             		bsr	_cmd_logo
 304:../src/EVE/EVE.c ****     //wr32(REG_DLSWAP,1);
 305:../src/EVE/EVE.c ****     cmd_swap();
 631                             		.loc 1 305 0
 632 0015 05 00 00 00             		bsr	_cmd_swap
 306:../src/EVE/EVE.c ****     wr32(REG_CMD_WRITE,cli);
 633                             		.loc 1 306 0
 634 0019 FB 52 00 00 00 00       		mov.L	#_cli, r5
 635 001f EC 55                   		mov.L	[r5], r5
 636 0021 FB 1E E8 24 10          		mov.L	#0x1024e8, r1
 637 0026 EF 52                   		mov.L	r5, r2
 638 0028 05 00 00 00             		bsr	_wr32
 307:../src/EVE/EVE.c ****     /* Wait till coprocessor completes the operation */
 308:../src/EVE/EVE.c **** 	waitcmdfifo_empty();
 639                             		.loc 1 308 0
 640 002c 05 00 00 00             		bsr	_waitcmdfifo_empty
 309:../src/EVE/EVE.c ****     wr32(REG_CMD_WRITE,0);
 641                             		.loc 1 309 0
 642 0030 FB 1E E8 24 10          		mov.L	#0x1024e8, r1
 643 0035 66 02                   		mov.L	#0, r2
 644 0037 05 00 00 00             		bsr	_wr32
 310:../src/EVE/EVE.c ****     wr32(REG_CMD_READ,0);
 645                             		.loc 1 310 0
 646 003b FB 1E E4 24 10          		mov.L	#0x1024e4, r1
 647 0040 66 02                   		mov.L	#0, r2
 648 0042 05 00 00 00             		bsr	_wr32
 311:../src/EVE/EVE.c ****     delay_ms(5000);
 649                             		.loc 1 311 0
 650 0046 FB 1A 88 13             		mov.L	#0x1388, r1
 651 004a 05 00 00 00             		bsr	_delay_ms
 312:../src/EVE/EVE.c **** }
 652                             		.loc 1 312 0
 653 004e 3F 66 01                		rtsd	#4, r6-r6
 654                             	.LFE15:
 656                             		.section	.text.Display_test,"ax",@progbits
 657                             		.global	_Display_test
 659                             	_Display_test:
 660                             	.LFB16:
 313:../src/EVE/EVE.c **** 
 314:../src/EVE/EVE.c **** 
 315:../src/EVE/EVE.c **** void Display_test(uint8_t second){
 661                             		.loc 1 315 0
 662 0000 7E A6                   		push.l	r6
 663                             	.LCFI40:
 664 0002 71 06 FC                		add	#-4, r0, r6
 665                             	.LCFI41:
 666 0005 71 60 F8                		add	#-8, r6, r0
 667                             	.LCFI42:
 668 0008 C3 61                   		mov.B	r1, [r6]
 316:../src/EVE/EVE.c **** 
 317:../src/EVE/EVE.c **** 	cli = 0;
 669                             		.loc 1 317 0
 670 000a FB 52 00 00 00 00       		mov.L	#_cli, r5
 671 0010 F8 56 00                		mov.L	#0, [r5]
 318:../src/EVE/EVE.c **** 	cmd_dlstart();
 672                             		.loc 1 318 0
 673 0013 05 00 00 00             		bsr	_cmd_dlstart
 319:../src/EVE/EVE.c **** 	cmd(CLEAR(1, 1, 1));
 674                             		.loc 1 319 0
 675 0017 FB 12 07 00 00 26       		mov.L	#0x26000007, r1
 676 001d 05 00 00 00             		bsr	_cmd
 320:../src/EVE/EVE.c **** 	cmd(CLEAR_COLOR_RGB(31, 63, 127));
 677                             		.loc 1 320 0
 678 0021 FB 12 7F 3F 1F 02       		mov.L	#0x21f3f7f, r1
 679 0027 05 00 00 00             		bsr	_cmd
 321:../src/EVE/EVE.c **** 	cmd_clock(224, 134, 113, 0, 13, 51, second, 0);
 680                             		.loc 1 321 0
 681 002b 58 65                   		movu.B	[r6], r5
 682 002d F8 05 0D                		mov.W	#13, [r0]
 683 0030 3D 01 33                		mov.W	#51, 2[r0]
 684 0033 90 85                   		mov.W	r5, 4[r0]
 685 0035 3D 03 00                		mov.W	#0, 6[r0]
 686 0038 75 41 E0                		mov.L	#0xe0, r1
 687 003b 75 42 86                		mov.L	#0x86, r2
 688 003e 75 43 71                		mov.L	#0x71, r3
 689 0041 66 04                   		mov	#0, r4
 690 0043 05 00 00 00             		bsr	_cmd_clock
 322:../src/EVE/EVE.c **** 	refresh_display();
 691                             		.loc 1 322 0
 692 0047 05 00 00 00             		bsr	_refresh_display
 323:../src/EVE/EVE.c **** 
 324:../src/EVE/EVE.c **** }
 693                             		.loc 1 324 0
 694 004b 3F 66 04                		rtsd	#16, r6-r6
 695                             	.LFE16:
 697                             		.section C,"a",@progbits
 698 0016 00 00                   		.p2align 2
 699                             	.LC1:
 700 0018 42 61 72 6B 00          		.string	"Bark"
 701                             	.LC2:
 702 001d 25 30 32 64 3A 25 30 32 		.string	"%02d:%02d:%02d %02d.%02d.%04d"
 702      64 3A 25 30 32 64 20 25 
 702      30 32 64 2E 25 30 32 64 
 702      2E 25 30 34 64 00 
 703                             	.LC3:
 704 003b 42 61 72 6B 65 64 00    		.string	"Barked"
 705                             		.section	.text.Display_test2,"ax",@progbits
 706                             		.global	_Display_test2
 708                             	_Display_test2:
 709                             	.LFB17:
 325:../src/EVE/EVE.c **** 
 326:../src/EVE/EVE.c **** 
 327:../src/EVE/EVE.c **** 
 328:../src/EVE/EVE.c **** void Display_test2(uint8_t hour, uint8_t minute, uint8_t second){
 710                             		.loc 1 328 0
 711 0000 7E A6                   		push.l	r6
 712                             	.LCFI43:
 713 0002 71 06 E8                		add	#-24, r0, r6
 714                             	.LCFI44:
 715 0005 71 60 E4                		add	#-28, r6, r0
 716                             	.LCFI45:
 717 0008 85 61                   		mov.B	r1, 20[r6]
 718 000a 85 6A                   		mov.B	r2, 21[r6]
 719 000c 85 E3                   		mov.B	r3, 22[r6]
 329:../src/EVE/EVE.c **** 
 330:../src/EVE/EVE.c **** 	char DateTime[19];
 331:../src/EVE/EVE.c **** 	cli = 0;
 720                             		.loc 1 331 0
 721 000e FB 52 00 00 00 00       		mov.L	#_cli, r5
 722 0014 F8 56 00                		mov.L	#0, [r5]
 332:../src/EVE/EVE.c **** 	cmd_dlstart();
 723                             		.loc 1 332 0
 724 0017 05 00 00 00             		bsr	_cmd_dlstart
 333:../src/EVE/EVE.c **** 	cmd(CLEAR(1, 1, 1));
 725                             		.loc 1 333 0
 726 001b FB 12 07 00 00 26       		mov.L	#0x26000007, r1
 727 0021 05 00 00 00             		bsr	_cmd
 334:../src/EVE/EVE.c **** 	//Paint Background
 335:../src/EVE/EVE.c **** 	cmd(CLEAR_COLOR_RGB(85, 255, 127));
 728                             		.loc 1 335 0
 729 0025 FB 12 7F FF 55 02       		mov.L	#0x255ff7f, r1
 730 002b 05 00 00 00             		bsr	_cmd
 336:../src/EVE/EVE.c **** 	cmd_gradient(0, 0, 0x007FFF, 477, 269, 0x7FFF00);
 731                             		.loc 1 336 0
 732 002f F8 0A 0D 01             		mov.L	#0x10d, [r0]
 733 0033 F9 0E 01 00 FF 7F       		mov.L	#0x7fff00, 4[r0]
 734 0039 66 01                   		mov.L	#0, r1
 735 003b 66 02                   		mov.L	#0, r2
 736 003d FB 3A FF 7F             		mov.L	#0x7fff, r3
 737 0041 FB 4A DD 01             		mov.L	#0x1dd, r4
 738 0045 05 00 00 00             		bsr	_cmd_gradient
 337:../src/EVE/EVE.c **** 	cmd(TAG(1));
 739                             		.loc 1 337 0
 740 0049 FB 12 01 00 00 03       		mov.L	#0x3000001, r1
 741 004f 05 00 00 00             		bsr	_cmd
 338:../src/EVE/EVE.c **** 	cmd_button(165, 194, 120, 36, 27, 0, "Bark");
 742                             		.loc 1 338 0
 743 0053 F8 06 1B                		mov.L	#27, [r0]
 744 0056 3E 01 00                		mov.L	#0, 4[r0]
 745 0059 F9 02 02 18 00 00 00    		mov.L	#.LC1, 8[r0]
 746 0060 75 41 A5                		mov.L	#0xa5, r1
 747 0063 75 42 C2                		mov.L	#0xc2, r2
 748 0066 75 43 78                		mov.L	#0x78, r3
 749 0069 75 44 24                		mov.L	#36, r4
 750 006c 05 00 00 00             		bsr	_cmd_button
 339:../src/EVE/EVE.c ****     cmd(BEGIN(RECTS));
 751                             		.loc 1 339 0
 752 0070 FB 12 09 00 00 1F       		mov.L	#0x1f000009, r1
 753 0076 05 00 00 00             		bsr	_cmd
 340:../src/EVE/EVE.c **** 	cmd(VERTEX2II(270, 13, 0, 0));
 754                             		.loc 1 340 0
 755 007a FB 12 00 D0 C0 A1       		mov.L	#0xa1c0d000, r1
 756 0080 05 00 00 00             		bsr	_cmd
 341:../src/EVE/EVE.c **** 	cmd(VERTEX2II(470, 33, 0, 0));
 757                             		.loc 1 341 0
 758 0084 FB 12 00 10 C2 BA       		mov.L	#0xbac21000, r1
 759 008a 05 00 00 00             		bsr	_cmd
 342:../src/EVE/EVE.c **** 	cmd(END());
 760                             		.loc 1 342 0
 761 008e FB 12 00 00 00 21       		mov.L	#0x21000000, r1
 762 0094 05 00 00 00             		bsr	_cmd
 343:../src/EVE/EVE.c **** 	cmd(COLOR_RGB(0, 0, 0));
 763                             		.loc 1 343 0
 764 0098 FB 12 00 00 00 04       		mov.L	#0x4000000, r1
 765 009e 05 00 00 00             		bsr	_cmd
 344:../src/EVE/EVE.c **** 	sprintf(DateTime,"%02d:%02d:%02d %02d.%02d.%04d",hour, minute, second, 1,11,2018);
 766                             		.loc 1 344 0
 767 00a2 B5 63                   		movu.B	20[r6], r3
 768 00a4 B5 6C                   		movu.B	21[r6], r4
 769 00a6 B5 E5                   		movu.B	22[r6], r5
 770 00a8 F8 02 1D 00 00 00       		mov.L	#.LC2, [r0]
 771 00ae A0 0B                   		mov.L	r3, 4[r0]
 772 00b0 A0 84                   		mov.L	r4, 8[r0]
 773 00b2 A0 8D                   		mov.L	r5, 12[r0]
 774 00b4 3E 04 01                		mov.L	#1, 16[r0]
 775 00b7 3E 05 0B                		mov.L	#11, 20[r0]
 776 00ba F9 0A 06 E2 07          		mov.L	#0x7e2, 24[r0]
 777 00bf EF 61                   		mov.L	r6, r1
 778 00c1 05 00 00 00             		bsr	_sprintf
 345:../src/EVE/EVE.c **** 	cmd_text(273, 11, 28, 0, DateTime);
 779                             		.loc 1 345 0
 780 00c5 E3 06                   		mov.L	r6, [r0]
 781 00c7 FB 1A 11 01             		mov.L	#0x111, r1
 782 00cb 66 B2                   		mov.L	#11, r2
 783 00cd 75 43 1C                		mov.L	#28, r3
 784 00d0 66 04                   		mov.L	#0, r4
 785 00d2 05 00 00 00             		bsr	_cmd_text
 346:../src/EVE/EVE.c **** 
 347:../src/EVE/EVE.c **** 	if(rd16(REG_TOUCH_TAG)==1){
 786                             		.loc 1 347 0
 787 00d6 FB 1E 18 25 10          		mov.L	#0x102518, r1
 788 00db 05 00 00 00             		bsr	_rd16
 789 00df EF 15                   		mov.L	r1, r5
 790 00e1 61 15                   		cmp	#1, r5
 791 00e3 21 1F                   		bne	.L30
 348:../src/EVE/EVE.c **** 		cmd_button(165, 194, 120, 36, 27, 0, "Barked");
 792                             		.loc 1 348 0
 793 00e5 F8 06 1B                		mov.L	#27, [r0]
 794 00e8 3E 01 00                		mov.L	#0, 4[r0]
 795 00eb F9 02 02 3B 00 00 00    		mov.L	#.LC3, 8[r0]
 796 00f2 75 41 A5                		mov.L	#0xa5, r1
 797 00f5 75 42 C2                		mov.L	#0xc2, r2
 798 00f8 75 43 78                		mov.L	#0x78, r3
 799 00fb 75 44 24                		mov.L	#36, r4
 800 00fe 05 00 00 00             		bsr	_cmd_button
 801                             	.L30:
 349:../src/EVE/EVE.c **** 	}
 350:../src/EVE/EVE.c **** 
 351:../src/EVE/EVE.c **** 	refresh_display();
 802                             		.loc 1 351 0
 803 0102 05 00 00 00             		bsr	_refresh_display
 352:../src/EVE/EVE.c **** 
 353:../src/EVE/EVE.c **** }
 804                             		.loc 1 353 0
 805 0106 3F 66 0E                		rtsd	#56, r6-r6
 806                             	.LFE17:
 808                             		.section C,"a",@progbits
 809 0042 00 00                   		.p2align 2
 810                             	.LC4:
 811 0044 57 75 66 66 00          		.string	"Wuff"
 812 0049 00 00 00                		.section	.text.Display_test3,"ax",@progbits
 813                             		.global	_Display_test3
 815                             	_Display_test3:
 816                             	.LFB18:
 354:../src/EVE/EVE.c **** 
 355:../src/EVE/EVE.c **** void Display_test3(uint8_t hour, uint8_t minute, uint8_t second){
 817                             		.loc 1 355 0
 818 0000 7E A6                   		push.l	r6
 819                             	.LCFI46:
 820 0002 71 06 E8                		add	#-24, r0, r6
 821                             	.LCFI47:
 822 0005 71 60 E4                		add	#-28, r6, r0
 823                             	.LCFI48:
 824 0008 85 61                   		mov.B	r1, 20[r6]
 825 000a 85 6A                   		mov.B	r2, 21[r6]
 826 000c 85 E3                   		mov.B	r3, 22[r6]
 356:../src/EVE/EVE.c **** 
 357:../src/EVE/EVE.c **** 	char DateTime[19];
 358:../src/EVE/EVE.c **** 	cli = 0;
 827                             		.loc 1 358 0
 828 000e FB 52 00 00 00 00       		mov.L	#_cli, r5
 829 0014 F8 56 00                		mov.L	#0, [r5]
 359:../src/EVE/EVE.c **** 	uint8_t tag;
 360:../src/EVE/EVE.c **** 	tag=rd16(REG_TOUCH_TAG);
 830                             		.loc 1 360 0
 831 0017 FB 1E 18 25 10          		mov.L	#0x102518, r1
 832 001c 05 00 00 00             		bsr	_rd16
 833 0020 EF 15                   		mov.L	r1, r5
 834 0022 C3 65                   		mov.B	r5, [r6]
 361:../src/EVE/EVE.c **** 
 362:../src/EVE/EVE.c **** 	cmd_dlstart();
 835                             		.loc 1 362 0
 836 0024 05 00 00 00             		bsr	_cmd_dlstart
 363:../src/EVE/EVE.c **** 	cmd(CLEAR(1, 1, 1));
 837                             		.loc 1 363 0
 838 0028 FB 12 07 00 00 26       		mov.L	#0x26000007, r1
 839 002e 05 00 00 00             		bsr	_cmd
 364:../src/EVE/EVE.c **** 	//Paint Background
 365:../src/EVE/EVE.c **** 	cmd(CLEAR_COLOR_RGB(85, 255, 127));
 840                             		.loc 1 365 0
 841 0032 FB 12 7F FF 55 02       		mov.L	#0x255ff7f, r1
 842 0038 05 00 00 00             		bsr	_cmd
 366:../src/EVE/EVE.c **** 	cmd_gradient(0, 0, 0x007FFF, 477, 269, 0x7FFF00);
 843                             		.loc 1 366 0
 844 003c F8 0A 0D 01             		mov.L	#0x10d, [r0]
 845 0040 F9 0E 01 00 FF 7F       		mov.L	#0x7fff00, 4[r0]
 846 0046 66 01                   		mov.L	#0, r1
 847 0048 66 02                   		mov.L	#0, r2
 848 004a FB 3A FF 7F             		mov.L	#0x7fff, r3
 849 004e FB 4A DD 01             		mov.L	#0x1dd, r4
 850 0052 05 00 00 00             		bsr	_cmd_gradient
 367:../src/EVE/EVE.c **** 	cmd(TAG(1));
 851                             		.loc 1 367 0
 852 0056 FB 12 01 00 00 03       		mov.L	#0x3000001, r1
 853 005c 05 00 00 00             		bsr	_cmd
 368:../src/EVE/EVE.c **** 	if(!tag)
 854                             		.loc 1 368 0
 855 0060 58 65                   		movu.B	[r6], r5
 856 0062 61 05                   		cmp	#0, r5
 857 0064 21 21                   		bne	.L32
 369:../src/EVE/EVE.c **** 		cmd_button(165, 194, 120, 36, 27, 0, "Bark");
 858                             		.loc 1 369 0
 859 0066 F8 06 1B                		mov.L	#27, [r0]
 860 0069 3E 01 00                		mov.L	#0, 4[r0]
 861 006c F9 02 02 18 00 00 00    		mov.L	#.LC1, 8[r0]
 862 0073 75 41 A5                		mov.L	#0xa5, r1
 863 0076 75 42 C2                		mov.L	#0xc2, r2
 864 0079 75 43 78                		mov.L	#0x78, r3
 865 007c 75 44 24                		mov.L	#36, r4
 866 007f 05 00 00 00             		bsr	_cmd_button
 867 0083 2E 1F                   		bra	.L33
 868                             	.L32:
 370:../src/EVE/EVE.c **** 	else
 371:../src/EVE/EVE.c **** 		cmd_button(165, 194, 120, 36, 27, 0, "Wuff");
 869                             		.loc 1 371 0
 870 0085 F8 06 1B                		mov.L	#27, [r0]
 871 0088 3E 01 00                		mov.L	#0, 4[r0]
 872 008b F9 02 02 44 00 00 00    		mov.L	#.LC4, 8[r0]
 873 0092 75 41 A5                		mov.L	#0xa5, r1
 874 0095 75 42 C2                		mov.L	#0xc2, r2
 875 0098 75 43 78                		mov.L	#0x78, r3
 876 009b 75 44 24                		mov.L	#36, r4
 877 009e 05 00 00 00             		bsr	_cmd_button
 878                             	.L33:
 372:../src/EVE/EVE.c ****     cmd(BEGIN(RECTS));
 879                             		.loc 1 372 0
 880 00a2 FB 12 09 00 00 1F       		mov.L	#0x1f000009, r1
 881 00a8 05 00 00 00             		bsr	_cmd
 373:../src/EVE/EVE.c **** 	cmd(VERTEX2II(270, 13, 0, 0));
 882                             		.loc 1 373 0
 883 00ac FB 12 00 D0 C0 A1       		mov.L	#0xa1c0d000, r1
 884 00b2 05 00 00 00             		bsr	_cmd
 374:../src/EVE/EVE.c **** 	cmd(VERTEX2II(470, 33, 0, 0));
 885                             		.loc 1 374 0
 886 00b6 FB 12 00 10 C2 BA       		mov.L	#0xbac21000, r1
 887 00bc 05 00 00 00             		bsr	_cmd
 375:../src/EVE/EVE.c **** 	cmd(END());
 888                             		.loc 1 375 0
 889 00c0 FB 12 00 00 00 21       		mov.L	#0x21000000, r1
 890 00c6 05 00 00 00             		bsr	_cmd
 376:../src/EVE/EVE.c **** 	cmd(COLOR_RGB(0, 0, 0));
 891                             		.loc 1 376 0
 892 00ca FB 12 00 00 00 04       		mov.L	#0x4000000, r1
 893 00d0 05 00 00 00             		bsr	_cmd
 377:../src/EVE/EVE.c **** 	sprintf(DateTime,"%02d:%02d:%02d %02d.%02d.%04d",hour, minute, second, 1,11,2018);
 894                             		.loc 1 377 0
 895 00d4 B5 62                   		movu.B	20[r6], r2
 896 00d6 B5 6B                   		movu.B	21[r6], r3
 897 00d8 B5 E4                   		movu.B	22[r6], r4
 898 00da 71 65 01                		add	#1, r6, r5
 899 00dd F8 02 1D 00 00 00       		mov.L	#.LC2, [r0]
 900 00e3 A0 0A                   		mov.L	r2, 4[r0]
 901 00e5 A0 83                   		mov.L	r3, 8[r0]
 902 00e7 A0 8C                   		mov.L	r4, 12[r0]
 903 00e9 3E 04 01                		mov.L	#1, 16[r0]
 904 00ec 3E 05 0B                		mov.L	#11, 20[r0]
 905 00ef F9 0A 06 E2 07          		mov.L	#0x7e2, 24[r0]
 906 00f4 EF 51                   		mov.L	r5, r1
 907 00f6 05 00 00 00             		bsr	_sprintf
 378:../src/EVE/EVE.c **** 	cmd_text(273, 11, 28, 0, DateTime);
 908                             		.loc 1 378 0
 909 00fa 71 65 01                		add	#1, r6, r5
 910 00fd E3 05                   		mov.L	r5, [r0]
 911 00ff FB 1A 11 01             		mov.L	#0x111, r1
 912 0103 66 B2                   		mov.L	#11, r2
 913 0105 75 43 1C                		mov.L	#28, r3
 914 0108 66 04                   		mov.L	#0, r4
 915 010a 05 00 00 00             		bsr	_cmd_text
 379:../src/EVE/EVE.c **** 
 380:../src/EVE/EVE.c **** 	refresh_display();
 916                             		.loc 1 380 0
 917 010e 05 00 00 00             		bsr	_refresh_display
 381:../src/EVE/EVE.c **** 
 382:../src/EVE/EVE.c **** }
 918                             		.loc 1 382 0
 919 0112 3F 66 0E                		rtsd	#56, r6-r6
 920                             	.LFE18:
 1344                             	.Letext0:
 1345                             		.file 2 "C:/projekte/repo/HomeServer/Firmware/Renesas/RX600_EVE_HomeServer/generate/iodefine.h"
 1346                             		.file 3 "c:\\program files (x86)\\gcc for renesas rx 4.8.4.201803-gnurx-elf\\rx-elf\\rx-elf\\rx-el
 1347                             		.file 4 "c:\\program files (x86)\\gcc for renesas rx 4.8.4.201803-gnurx-elf\\rx-elf\\rx-elf\\rx-el
